% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lib_gaver_stehfest.R
\name{fn_gs}
\alias{fn_gs}
\title{Compute Inverse Laplace transform using Gaver-Stehfest algorithm}
\usage{
fn_gs(Fn, x, n = 10, try_n = TRUE, plot = TRUE, ...)
}
\arguments{
\item{Fn}{Function. Function to be inversed.}

\item{x}{Numeric (positive). Location of the function to be approximated.}

\item{n}{Numeric. Number of terms used in the Gaver-Stehfest algorithm.}

\item{try_n}{Logical. Whether all n values up to \code{n} are evaluated. Useful to determine \code{n}.}

\item{plot}{Logical. In case \code{try_n} is \code{TRUE}, a plot is also generated.}

\item{...}{Other arguments to be passed to \code{Fn}. (".k123456" is reserved. An event of argument crash should be unlikely...)}
}
\value{
Numeric. Vector of length \code{n} if \code{try_n} is \code{TRUE} (Default). Otherwise, length is 1.
}
\description{
Note Gaver-Stehfest algorithm is theoretically convergent but practically high precision arithmetic is required.
This is not achieved in R as R4.0+ uses "long-double" in C, which is 64bit floating point. As a result, using high
\code{n} would yield results divergent to infinity. Therefore, small \code{n} should be used. Using default arguments,
values for different \code{n} would be printed along with a plot which assists in determining an appropriate \code{n}.
}
\examples{

library(pruin)

## constant function
Fconst <- function(x,k)k/x

fn_gs(Fconst,2,n=15,k=2)

}
